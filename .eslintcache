[{"/home/pedro/node/react/react-semantic-ui/src/index.js":"1","/home/pedro/node/react/react-semantic-ui/src/features/nav/NavBar.jsx":"2","/home/pedro/node/react/react-semantic-ui/src/features/events/eventDashboard/EventList.jsx":"3","/home/pedro/node/react/react-semantic-ui/src/features/events/eventDashboard/EventDashboard.jsx":"4","/home/pedro/node/react/react-semantic-ui/src/features/events/eventDashboard/EventListAttendee.jsx":"5","/home/pedro/node/react/react-semantic-ui/src/features/events/eventForm/EventForm.jsx":"6","/home/pedro/node/react/react-semantic-ui/src/app/layout/App.js":"7","/home/pedro/node/react/react-semantic-ui/src/features/events/eventDashboard/EventListItem.jsx":"8","/home/pedro/node/react/react-semantic-ui/src/features/home/HomePage.jsx":"9","/home/pedro/node/react/react-semantic-ui/src/app/api/sampleData.js":"10","/home/pedro/node/react/react-semantic-ui/src/features/events/eventDetailed/EventDatailed.jsx":"11","/home/pedro/node/react/react-semantic-ui/src/features/nav/SignedInMenu.jsx":"12","/home/pedro/node/react/react-semantic-ui/src/features/nav/SignedOutMenu.jsx":"13"},{"size":520,"mtime":1610536063261,"results":"14","hashOfConfig":"15"},{"size":1067,"mtime":1610635245657,"results":"16","hashOfConfig":"15"},{"size":392,"mtime":1610583993838,"results":"17","hashOfConfig":"15"},{"size":1472,"mtime":1610583961419,"results":"18","hashOfConfig":"15"},{"size":271,"mtime":1610536063241,"results":"19","hashOfConfig":"15"},{"size":2722,"mtime":1610581794584,"results":"20","hashOfConfig":"15"},{"size":1402,"mtime":1610629348199,"results":"21","hashOfConfig":"15"},{"size":1502,"mtime":1610584936269,"results":"22","hashOfConfig":"15"},{"size":626,"mtime":1610629274392,"results":"23","hashOfConfig":"15"},{"size":1583,"mtime":1610536063241,"results":"24","hashOfConfig":"15"},{"size":139,"mtime":1610619024072,"results":"25","hashOfConfig":"15"},{"size":741,"mtime":1610635293780,"results":"26","hashOfConfig":"15"},{"size":398,"mtime":1610635338548,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lgtmbi",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pedro/node/react/react-semantic-ui/src/index.js",[],"/home/pedro/node/react/react-semantic-ui/src/features/nav/NavBar.jsx",[],"/home/pedro/node/react/react-semantic-ui/src/features/events/eventDashboard/EventList.jsx",[],"/home/pedro/node/react/react-semantic-ui/src/features/events/eventDashboard/EventDashboard.jsx",[],[],"/home/pedro/node/react/react-semantic-ui/src/features/events/eventDashboard/EventListAttendee.jsx",[],"/home/pedro/node/react/react-semantic-ui/src/features/events/eventForm/EventForm.jsx",["57"],"import React, { useState } from 'react';\nimport { Button, Form, Header, Segment } from 'semantic-ui-react';\nimport cuid from 'cuid';\n\nconst EventForm = ({\n  setFormOpen,\n  setEvents,\n  createEvent,\n  selectedEvent,\n  updatedEvent,\n}) => {\n  const initialValues = selectedEvent ?? {\n    title: '',\n    category: '',\n    description: '',\n    city: '',\n    venue: '',\n    date: '',\n  };\n\n  const [values, setValues] = useState(initialValues);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmitForm = () => {\n    selectedEvent\n      ? updatedEvent({ ...selectedEvent, ...values })\n      : createEvent({\n          ...values,\n          id: cuid(),\n          attendees: [],\n          hostPhotoURL: 'https://randomuser.me/api/portraits/men/20.jpg',\n          hostedBy: 'Bob',\n        });\n  };\n\n  return (\n    <Segment clearing>\n      <Header content={selectedEvent ? 'Edit the event' : 'Create new event'} />\n      <Form onSubmit={handleSubmitForm}>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Event title\"\n            name=\"title\"\n            value={values.title}\n            onChange={handleInputChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Category\"\n            name=\"category\"\n            value={values.category}\n            onChange={handleInputChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"City\"\n            name=\"city\"\n            value={values.city}\n            onChange={handleInputChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            value={values.description}\n            onChange={handleInputChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Venue\"\n            name=\"venue\"\n            value={values.venue}\n            onChange={handleInputChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"date\"\n            placeholder=\"Date\"\n            name=\"date\"\n            value={values.date}\n            onChange={handleInputChange}\n          />\n        </Form.Field>\n        <Button type=\"submit\" floated=\"right\" positive content=\"Submit\" />\n        <Button\n          type=\"button\"\n          onClick={() => setFormOpen(false)}\n          floated=\"right\"\n          content=\"Cancel\"\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default EventForm;\n","/home/pedro/node/react/react-semantic-ui/src/app/layout/App.js",["58","59","60"],"import React, { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\n\nimport EventDashboard from '../../features/events/eventDashboard/EventDashboard';\nimport EventDatailedPage from '../../features/events/eventDetailed/EventDatailed';\nimport EventForm from '../../features/events/eventForm/EventForm';\nimport HomePage from '../../features/home/HomePage';\nimport NavBar from '../../features/nav/NavBar';\n\nimport './styles.css';\n\nconst App = () => {\n  const [formOpen, setFormOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(undefined);\n\n  const handleSelectEvent = (event) => {\n    // console.log(event);\n    setSelectedEvent(event);\n    setFormOpen(true);\n  };\n\n  const handleCreateFormOpen = () => {\n    setSelectedEvent(undefined);\n    setFormOpen(true);\n  };\n\n  return (\n    <>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar setFormOpen={handleCreateFormOpen} />\n            <Container className=\"main\">\n              <Route exact path=\"/events\" component={EventDashboard} />\n              <Route path=\"/events/:id\" component={EventDatailedPage} />\n              <Route path=\"/createEvent\" component={EventForm} />\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n};\n\nexport default App;\n","/home/pedro/node/react/react-semantic-ui/src/features/events/eventDashboard/EventListItem.jsx",[],"/home/pedro/node/react/react-semantic-ui/src/features/home/HomePage.jsx",[],"/home/pedro/node/react/react-semantic-ui/src/app/api/sampleData.js",[],"/home/pedro/node/react/react-semantic-ui/src/features/events/eventDetailed/EventDatailed.jsx",[],"/home/pedro/node/react/react-semantic-ui/src/features/nav/SignedInMenu.jsx",[],"/home/pedro/node/react/react-semantic-ui/src/features/nav/SignedOutMenu.jsx",[],{"ruleId":"61","severity":1,"message":"62","line":7,"column":3,"nodeType":"63","messageId":"64","endLine":7,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":14,"column":10,"nodeType":"63","messageId":"64","endLine":14,"endColumn":18},{"ruleId":"61","severity":1,"message":"66","line":15,"column":10,"nodeType":"63","messageId":"64","endLine":15,"endColumn":23},{"ruleId":"61","severity":1,"message":"67","line":17,"column":9,"nodeType":"63","messageId":"64","endLine":17,"endColumn":26},"no-unused-vars","'setEvents' is defined but never used.","Identifier","unusedVar","'formOpen' is assigned a value but never used.","'selectedEvent' is assigned a value but never used.","'handleSelectEvent' is assigned a value but never used."]